@model VendorDetailsViewModel
@{
    ViewData["Title"] = $"Invoices for {Model.vendor.Name}";
}
<div class="container">

    <div class="d-flex p-1">
        <div class="flex-fill p-2">
            <h4 class="float-end">
                <b>
                    <a asp-controller="Vendor" asp-action="GetVendorList"
                       asp-route-startingLetter="@Model.startingLetter" asp-route-endingLetter="@Model.endingLetter">
                        Return to Vendor List @($"({@Model.startingLetter} - {@Model.endingLetter})")
                    </a>
                </b>
            </h4>
        </div>
    </div>
    <div class="d-flex p-1">
        <div class="flex-fill p-2 flex-column">
            <div class="p-2 float-start"><h2><b>Address: </b>@Model.vendor.Address1 @Model.vendor.Address2</h2></div>
            @if (@Model.vendor.Invoices.Where(i => i.InvoiceId == Model.SelectedInvoiceId).FirstOrDefault() != null)
            {
                @foreach (var paymentTerm in @Model.vendor.Invoices.Where(i => i.InvoiceId == Model.SelectedInvoiceId).FirstOrDefault().PaymentTerms)
                {
                    if (paymentTerm.PaymentTermsId == Model.vendor.Invoices.Where(i => i.InvoiceId == Model.SelectedInvoiceId).FirstOrDefault().PaymentTermsId)
                    {
                        <div class="p-2 float-end"><h2><b>Terms: @paymentTerm.DueDays Days</b></h2></div>
                    }
                }
            }
            else
            {
                <div class="p-2 float-end"><h2><b>Terms: N/A</b></h2></div>
            }
            
        </div>
    </div>
    </br>
    </br>
    <div>
        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <h4>There are errors in one of the forms:</h4>
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {

                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }
    </div>
    <div class="d-flex p-1">
        <div class="flex-fill p-2 flex-column col-sm-7">
            @await Component.InvokeAsync("InvoiceDetails", new {vendorId = @Model.vendor.VendorId, invoiceId = (@Model.SelectedInvoiceId != null) ? Model.SelectedInvoiceId : 0, startingletter = Model.startingLetter, endingletter = Model.endingLetter})
        </div>
        <div class="flex-fill p-2 flex-column col-sm-5">
            @await Component.InvokeAsync("InvoiceLineItems", new {vendorId = @Model.vendor.VendorId, invoiceId = (@Model.SelectedInvoiceId != null) ? Model.SelectedInvoiceId : 0, startingletter = Model.startingLetter, endingletter = Model.endingLetter})
        </div>
    </div>
</div>